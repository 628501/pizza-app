{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\states\\\\Frontend\\\\src\\\\hooks\\\\UseCart.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(null);\nconst CART_KEY = 'cart';\nconst TOPPINGS_KEY = 'toppings';\nconst TOPPING_NAMES = 'names';\nconst EMPTY_CART = {\n  items: [],\n  totalPrice: 0,\n  totalCount: 0\n};\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const initCart = getCartFromLocalStorage();\n  const initToppings = getToppingsFromLocalStorage();\n  const initNames = getToppingNamesFromLocalStorage();\n  const [cartItems, setCartItems] = useState(initCart.items);\n  const [totalPrice, setTotalPrice] = useState(initCart.totalPrice);\n  const [totalCount, setTotalCount] = useState(initCart.totalCount);\n  const [toppings, setToppings] = useState(initToppings);\n  const [names, setNames] = useState(initNames);\n  const removeFromCart = index => {\n    // const filteredCartItems = cartItems.filter((item) => item.food.id !== foodId);\n    setCartItems(filteredCartItems);\n    setToppings(prevToppings => {\n      const updatedToppings = {\n        ...prevToppings\n      };\n      delete updatedToppings[foodId];\n      return updatedToppings;\n    });\n    setNames(prevName => {\n      const updatedNames = {\n        ...prevName\n      };\n      delete updatedNames[foodId];\n      return updatedNames;\n    });\n  };\n  useEffect(() => {\n    const totalPrice = sum(cartItems.map(item => item.price));\n    const totalCount = sum(cartItems.map(item => item.quantity));\n    setTotalPrice(totalPrice);\n    setTotalCount(totalCount);\n    const cartData = {\n      items: cartItems,\n      totalPrice,\n      totalCount\n    };\n    localStorage.setItem(CART_KEY, JSON.stringify(cartData));\n    localStorage.setItem(TOPPINGS_KEY, JSON.stringify(toppings));\n    localStorage.setItem(TOPPING_NAMES, JSON.stringify(names));\n  }, [cartItems, toppings, names]);\n  function getCartFromLocalStorage() {\n    const storedCart = localStorage.getItem(CART_KEY);\n    return storedCart ? JSON.parse(storedCart) : EMPTY_CART;\n  }\n  function getToppingsFromLocalStorage() {\n    const storedToppings = localStorage.getItem(TOPPINGS_KEY);\n    return storedToppings ? JSON.parse(storedToppings) : {};\n  }\n  function getToppingNamesFromLocalStorage() {\n    const storedNames = localStorage.getItem(TOPPING_NAMES);\n    return storedNames ? JSON.parse(storedNames) : {};\n  }\n  const veg = (food, value) => {\n    if (food) {\n      setToppings(prevToppings => ({\n        ...prevToppings,\n        [food.id]: prevToppings[food.id] ? prevToppings[food.id] + Number(value) : Number(value)\n      }));\n    }\n  };\n  const toppingName = (food, tName) => {\n    const curtop = names[food.id] || [];\n    if (food) {\n      setNames(prevName => ({\n        ...prevName,\n        [food.id]: [...curtop, tName]\n      }));\n    }\n  };\n  console.log(names);\n  const sum = item => {\n    return item.reduce((prevValue, curValue) => prevValue + curValue, 0);\n  };\n  const changeQuantity = (cartItem, newQuantity) => {\n    const {\n      food\n    } = cartItem;\n    const price = toppings[food.id] ? food.price + toppings[food.id] * newQuantity : food.price * newQuantity;\n    const changedCartItem = {\n      ...cartItem,\n      quantity: newQuantity,\n      price: price\n    };\n    setCartItems(cartItems.map(item => item.food.id === food.id ? changedCartItem : item));\n  };\n  const addToCart = food => {\n    const totalPriceWithToppings = calculatePrice(food, toppings);\n    const price = toppings[food.id] ? totalPriceWithToppings : food.price;\n\n    // const existingCartItemIndex = cartItems.findIndex(item => item.food.id === food.id);\n\n    // if (existingCartItemIndex !== -1) {\n    //   const updatedCartItem = {\n    //     ...cartItems[existingCartItemIndex],\n    //     toppings: toppings,\n    //     price\n    //   };\n\n    //   const updatedCartItems = [...cartItems];\n    //   updatedCartItems[existingCartItemIndex] = updatedCartItem;\n\n    //   setCartItems(updatedCartItems);\n    // } else {\n\n    setCartItems([...cartItems, {\n      food,\n      quantity: 1,\n      toppings: toppings,\n      price\n    }]);\n    //   }\n  };\n  const calculatePrice = (food, toppings) => {\n    let price = food.price;\n    if (toppings) {\n      price += toppings[food.id];\n    }\n    return price;\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: {\n        items: cartItems,\n        totalPrice,\n        totalCount\n      },\n      removeFromCart,\n      changeQuantity,\n      addToCart,\n      veg,\n      setToppings,\n      toppingName,\n      setNames,\n      names\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"I8ajiAgMA1K+LRYfMv83DxgFEwU=\");\n_c = CartProvider;\nexport default CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","CartContext","CART_KEY","TOPPINGS_KEY","TOPPING_NAMES","EMPTY_CART","items","totalPrice","totalCount","CartProvider","children","_s","initCart","getCartFromLocalStorage","initToppings","getToppingsFromLocalStorage","initNames","getToppingNamesFromLocalStorage","cartItems","setCartItems","setTotalPrice","setTotalCount","toppings","setToppings","names","setNames","removeFromCart","index","filteredCartItems","prevToppings","updatedToppings","foodId","prevName","updatedNames","sum","map","item","price","quantity","cartData","localStorage","setItem","JSON","stringify","storedCart","getItem","parse","storedToppings","storedNames","veg","food","value","id","Number","toppingName","tName","curtop","console","log","reduce","prevValue","curValue","changeQuantity","cartItem","newQuantity","changedCartItem","addToCart","totalPriceWithToppings","calculatePrice","Provider","cart","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/karth/Desktop/states/Frontend/src/hooks/UseCart.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst CartContext = createContext(null);\r\nconst CART_KEY = 'cart';\r\nconst TOPPINGS_KEY = 'toppings'; \r\nconst TOPPING_NAMES = 'names'\r\nconst EMPTY_CART = {\r\n  items: [],\r\n  totalPrice: 0,\r\n  totalCount: 0\r\n};\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const initCart = getCartFromLocalStorage();\r\n  const initToppings = getToppingsFromLocalStorage(); \r\n  const initNames = getToppingNamesFromLocalStorage();\r\n  const [cartItems, setCartItems] = useState(initCart.items);\r\n  const [totalPrice, setTotalPrice] = useState(initCart.totalPrice);\r\n  const [totalCount, setTotalCount] = useState(initCart.totalCount);\r\n  const [toppings, setToppings] = useState(initToppings); \r\n  const [names, setNames] = useState(initNames)\r\n\r\n  const removeFromCart = (index) => {\r\n    // const filteredCartItems = cartItems.filter((item) => item.food.id !== foodId);\r\n    setCartItems(filteredCartItems);\r\n    setToppings((prevToppings) => {\r\n      const updatedToppings = { ...prevToppings };\r\n      delete updatedToppings[foodId];\r\n      return updatedToppings;\r\n    });\r\n    setNames((prevName)=> {\r\n      const updatedNames = {...prevName};\r\n      delete updatedNames[foodId];\r\n      return updatedNames;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const totalPrice = sum(cartItems.map((item) => item.price));\r\n    const totalCount = sum(cartItems.map((item) => item.quantity));\r\n    setTotalPrice(totalPrice);\r\n    setTotalCount(totalCount);\r\n\r\n    const cartData = {\r\n      items: cartItems,\r\n      totalPrice,\r\n      totalCount\r\n    };\r\n\r\n    localStorage.setItem(CART_KEY, JSON.stringify(cartData));\r\n    localStorage.setItem(TOPPINGS_KEY, JSON.stringify(toppings)); \r\n    localStorage.setItem(TOPPING_NAMES,JSON.stringify(names))\r\n  }, [cartItems,toppings,names]); \r\n\r\n  function getCartFromLocalStorage() {\r\n    const storedCart = localStorage.getItem(CART_KEY);\r\n    return storedCart ? JSON.parse(storedCart) : EMPTY_CART;\r\n  }\r\n\r\n  function getToppingsFromLocalStorage() {\r\n    const storedToppings = localStorage.getItem(TOPPINGS_KEY);\r\n    return storedToppings ? JSON.parse(storedToppings) : {};\r\n  }\r\n\r\n  function getToppingNamesFromLocalStorage(){\r\n    const storedNames = localStorage.getItem(TOPPING_NAMES);\r\n    return storedNames ? JSON.parse(storedNames) : {};\r\n  }\r\n\r\n  const veg = (food, value) => {\r\n    if (food) {\r\n      setToppings((prevToppings) => ({\r\n        ...prevToppings,\r\n        [food.id]: prevToppings[food.id] ? prevToppings[food.id] + Number(value) : Number(value)\r\n      }));\r\n    }\r\n  }; \r\n\r\n  const toppingName = (food, tName) =>{\r\n    const curtop = names[food.id] || []\r\n      if(food) {\r\n        setNames((prevName) => ({\r\n          ...prevName,\r\n          [food.id] : [...curtop,tName] \r\n        }))\r\n      }\r\n  }\r\n  \r\n  console.log(names);\r\n\r\n  const sum = (item) => {\r\n    return item.reduce((prevValue, curValue) => prevValue + curValue, 0);\r\n  };\r\n\r\n  const changeQuantity = (cartItem, newQuantity) => {\r\n    const { food } = cartItem;\r\n    const price = toppings[food.id]\r\n      ? food.price + (toppings[food.id] * newQuantity)\r\n      : food.price * newQuantity;\r\n\r\n    const changedCartItem = {\r\n      ...cartItem,\r\n      quantity: newQuantity,\r\n      price: price\r\n    };\r\n\r\n    setCartItems(cartItems.map((item) => (item.food.id === food.id ? changedCartItem : item)));\r\n  };\r\n\r\n  const addToCart = (food) => {\r\n    const totalPriceWithToppings = calculatePrice(food, toppings);\r\n\r\n    const price = toppings[food.id] ? totalPriceWithToppings : food.price;\r\n\r\n    // const existingCartItemIndex = cartItems.findIndex(item => item.food.id === food.id);\r\n\r\n    // if (existingCartItemIndex !== -1) {\r\n    //   const updatedCartItem = {\r\n    //     ...cartItems[existingCartItemIndex],\r\n    //     toppings: toppings,\r\n    //     price\r\n    //   };\r\n\r\n    //   const updatedCartItems = [...cartItems];\r\n    //   updatedCartItems[existingCartItemIndex] = updatedCartItem;\r\n\r\n    //   setCartItems(updatedCartItems);\r\n    // } else {\r\n     \r\n\r\n      setCartItems([...cartItems, { food, quantity: 1, toppings: toppings, price }]);\r\n  //   }\r\n   };\r\n  \r\n\r\n  \r\n  const calculatePrice = (food, toppings) => {\r\n    let price = food.price;\r\n    if (toppings) {\r\n        price += toppings[food.id]\r\n    }\r\n  \r\n    return price;\r\n  };\r\n  \r\n  \r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart: { items: cartItems, totalPrice, totalCount },\r\n        removeFromCart,\r\n        changeQuantity,\r\n        addToCart,\r\n        veg,\r\n        setToppings,\r\n        toppingName,\r\n        setNames,\r\n        names\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}