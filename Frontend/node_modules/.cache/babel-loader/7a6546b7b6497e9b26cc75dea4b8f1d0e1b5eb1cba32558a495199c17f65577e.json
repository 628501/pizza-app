{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\states\\\\Frontend\\\\src\\\\hooks\\\\UseAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useContext, createContext } from \"react\";\nimport * as userService from \"../Services/UserService\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(userService.getUser());\n  const login = async (email, password) => {\n    try {\n      const user = await userService.login(email, password);\n      setUser(user);\n      toast.success('Login Successful');\n    } catch (err) {\n      toast.error(err.response.data);\n    }\n  };\n  const logout = () => {\n    userService.logout();\n    setUser(null);\n    toast.success('Logout Successful');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      logout,\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"Y8NTwk54bZmwlQRWbG9FUvUd0nw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useContext","createContext","userService","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","getUser","login","email","password","success","err","error","response","data","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/karth/Desktop/states/Frontend/src/hooks/UseAuth.js"],"sourcesContent":["import { useState,useContext,createContext } from \"react\";\r\nimport * as userService  from \"../Services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AuthContext = createContext(null);\r\n\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [user,setUser] = useState(userService.getUser()); \r\n\r\n    const login = async (email,password) => {\r\n        try{\r\n            const user = await userService.login(email,password)\r\n            setUser(user)\r\n            toast.success('Login Successful')\r\n        }\r\n        catch (err) {\r\n            toast.error(err.response.data)       \r\n        }\r\n    }\r\n     \r\n    const logout = () => {\r\n        userService.logout();\r\n        setUser(null);\r\n        toast.success('Logout Successful')\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value = {{login, logout, user}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n"],"mappings":";;;AAAA,SAASA,QAAQ,EAACC,UAAU,EAACC,aAAa,QAAQ,OAAO;AACzD,OAAO,KAAKC,WAAW,MAAO,yBAAyB;AACvD,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAGvC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGZ,QAAQ,CAACG,WAAW,CAACU,OAAO,CAAC,CAAC,CAAC;EAEtD,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAACC,QAAQ,KAAK;IACpC,IAAG;MACC,MAAML,IAAI,GAAG,MAAMR,WAAW,CAACW,KAAK,CAACC,KAAK,EAACC,QAAQ,CAAC;MACpDJ,OAAO,CAACD,IAAI,CAAC;MACbP,KAAK,CAACa,OAAO,CAAC,kBAAkB,CAAC;IACrC,CAAC,CACD,OAAOC,GAAG,EAAE;MACRd,KAAK,CAACe,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACC,IAAI,CAAC;IAClC;EACJ,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjBnB,WAAW,CAACmB,MAAM,CAAC,CAAC;IACpBV,OAAO,CAAC,IAAI,CAAC;IACbR,KAAK,CAACa,OAAO,CAAC,mBAAmB,CAAC;EACtC,CAAC;EAED,oBACIX,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAI;MAACV,KAAK;MAAEQ,MAAM;MAAEX;IAAI,CAAE;IAAAF,QAAA,EAChDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAlB,EAAA,CAzBYF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA2BzB,OAAO,MAAMsB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM9B,UAAU,CAACM,WAAW,CAAC;AAAA;AAAAwB,GAAA,CAAvCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}