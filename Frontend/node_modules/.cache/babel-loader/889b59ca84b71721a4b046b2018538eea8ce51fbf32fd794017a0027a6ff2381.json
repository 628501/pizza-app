{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\states\\\\Frontend\\\\src\\\\hooks\\\\UseAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useContext, createContext, useEffect } from \"react\";\nimport * as userService from \"../Services/UserService\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [id, setId] = useState(null);\n  const [token, setToken] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n      setUser(parsedUser.name);\n      setAddress(parsedUser.address);\n      setEmail(parsedUser.emailId);\n    }\n  }, []);\n  const register = async (name, email, password, address) => {\n    try {\n      await userService.register(name, email, password, address);\n      navigate('/login');\n      toast.success('Registration successful');\n    } catch (err) {\n      toast.error(err.response.data.error);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const user = await userService.login(email, password);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user.name);\n      setAddress(user.address);\n      setEmail(user.emailId);\n      toast.success('Login successful');\n    } catch (err) {\n      toast.error(err.response.data.error);\n    }\n  };\n  const logout = async () => {\n    await userService.logout();\n    setUser(null);\n    setAddress(null);\n    localStorage.removeItem('user');\n    toast.success('Logout successful');\n  };\n  const forgotPassword = async email => {\n    try {\n      const {\n        data\n      } = await userService.forgotPass(email);\n      log;\n      toast.success('Mail sent successfully');\n      navigate('/');\n      setId(data.id);\n      setToken(data.token);\n    } catch (err) {\n      toast.error(err.response.data.error);\n    }\n  };\n  const ResetPassword = async password => {\n    try {\n      console.log(id);\n      console.log(token);\n      await userService.forgotPass(id, token, password);\n      toast.success('Password updated successfully');\n      navigate('/login');\n    } catch (err) {\n      toast.error(err.response.data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      register,\n      login,\n      logout,\n      user,\n      address,\n      email,\n      forgotPassword,\n      ResetPassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"BLC9sV37H+c+1vGtZ/Jiq0qM8tY=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useContext","createContext","useEffect","userService","toast","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","email","setEmail","address","setAddress","id","setId","token","setToken","navigate","storedUser","localStorage","getItem","parsedUser","JSON","parse","name","emailId","register","password","success","err","error","response","data","login","setItem","stringify","logout","removeItem","forgotPassword","forgotPass","log","ResetPassword","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/karth/Desktop/states/Frontend/src/hooks/UseAuth.js"],"sourcesContent":["import { useState, useContext, createContext, useEffect } from \"react\";\r\nimport * as userService from \"../Services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [email, setEmail] = useState(null);\r\n    const [address, setAddress] = useState(null);\r\n    const [id, setId] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem('user');\r\n        if (storedUser) {\r\n            const parsedUser = JSON.parse(storedUser);\r\n            setUser(parsedUser.name);\r\n            setAddress(parsedUser.address);\r\n            setEmail(parsedUser.emailId)\r\n        }\r\n    }, []);\r\n    \r\n    const register = async (name, email, password, address) => {\r\n        try {\r\n            await userService.register(name, email, password, address);\r\n            navigate('/login');\r\n            toast.success('Registration successful');\r\n        } catch (err) {\r\n            toast.error(err.response.data.error);\r\n        }\r\n    };\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            const user = await userService.login(email, password);\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            setUser(user.name);\r\n            setAddress(user.address);\r\n            setEmail(user.emailId)\r\n            toast.success('Login successful');\r\n        } catch (err) {\r\n            toast.error(err.response.data.error);\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        await userService.logout();\r\n        setUser(null);\r\n        setAddress(null);\r\n        localStorage.removeItem('user');\r\n        toast.success('Logout successful');\r\n    };\r\n\r\n    const forgotPassword = async (email) => {\r\n        try {\r\n            const {data} = await userService.forgotPass(email);\r\n            log\r\n            toast.success('Mail sent successfully');\r\n            navigate('/');\r\n            setId(data.id);\r\n            setToken(data.token);\r\n        } catch (err) {\r\n            toast.error(err.response.data.error);\r\n        }\r\n       \r\n    }\r\n\r\n    const ResetPassword = async (password) => {\r\n        try {\r\n            console.log(id)\r\n            console.log(token)\r\n            await userService.forgotPass(id,token,password);\r\n            toast.success('Password updated successfully');\r\n            navigate('/login');\r\n        } catch (err) {\r\n            toast.error(err.response.data.error);\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ register, login, logout, user, address, email, forgotPassword, ResetPassword }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}