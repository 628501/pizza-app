{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\states\\\\Frontend\\\\src\\\\Components\\\\PayPalButton\\\\PaypalButton.js\",\n  _s = $RefreshSig$();\nimport { PayPalButtons, PayPalScriptProvider, usePayPalScriptReducer } from '@paypal/react-paypal-js';\nimport { pay } from '../../Services/OrderService';\nimport React, { useEffect } from 'react';\nimport { useCart } from '../../hooks/UseCart';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { Loading } from '../../hooks/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaypalButton = ({\n  order,\n  id\n}) => {\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: {\n      clientId: 'AermEgBAhYi06j-B5SMfLFVB8CBHjNCFhd03xi7c5bFQT0r6zmRptAxm-F7E9cXtEiObrChmRzOhjs5z'\n    },\n    children: /*#__PURE__*/_jsxDEV(Buttons, {\n      order: order,\n      submit: submit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = PaypalButton;\nexport default PaypalButton;\nfunction Buttons({\n  order,\n  submit\n}) {\n  _s();\n  const {\n    clearCart\n  } = useCart();\n  const navigate = useNavigate();\n  const [{\n    isPending\n  }] = usePayPalScriptReducer();\n  const {\n    showLoading,\n    hideLoading\n  } = Loading();\n  useEffect(() => {\n    isPending ? showLoading() : hideLoading();\n  }, [isPending, showLoading, hideLoading]);\n  const createOrder = (data, actions) => {\n    return actions.order.create({\n      purchase_units: [{\n        amount: {\n          currency_code: 'USD',\n          value: order.totalPrice.toString()\n        }\n      }]\n    });\n  };\n  const onApprove = async (data, actions) => {\n    try {\n      const payment = await actions.order.capture();\n      const orderId = await submit();\n      console.log(orderId);\n      await pay(payment.id, orderId);\n      clearCart();\n      toast.success('Payment Saved Successfully', 'Success');\n      navigate('/track/' + orderId);\n    } catch (error) {\n      toast.error('Payment Saved Failed', 'Error');\n    }\n  };\n  const onError = err => {\n    toast.error('Payment Failed', 'Error');\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalButtons, {\n    createOrder: createOrder,\n    onApprove: onApprove,\n    onError: onError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Buttons, \"+1aDsMSJoPVbbuUacbRuQhaol9E=\", false, function () {\n  return [useCart, useNavigate, usePayPalScriptReducer];\n});\n_c2 = Buttons;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaypalButton\");\n$RefreshReg$(_c2, \"Buttons\");","map":{"version":3,"names":["PayPalButtons","PayPalScriptProvider","usePayPalScriptReducer","pay","React","useEffect","useCart","toast","useNavigate","Loading","jsxDEV","_jsxDEV","PaypalButton","order","id","options","clientId","children","Buttons","submit","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","clearCart","navigate","isPending","showLoading","hideLoading","createOrder","data","actions","create","purchase_units","amount","currency_code","value","totalPrice","toString","onApprove","payment","capture","orderId","console","log","success","error","onError","err","_c2","$RefreshReg$"],"sources":["C:/Users/karth/Desktop/states/Frontend/src/Components/PayPalButton/PaypalButton.js"],"sourcesContent":["import { PayPalButtons, PayPalScriptProvider, usePayPalScriptReducer } from '@paypal/react-paypal-js';\r\nimport { pay } from '../../Services/OrderService';\r\nimport React, { useEffect } from 'react';\r\nimport { useCart } from '../../hooks/UseCart';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Loading } from '../../hooks/Loading';\r\n\r\nconst PaypalButton = ({ order, id }) => {\r\n  return (\r\n    <PayPalScriptProvider\r\n      options={{\r\n        clientId: 'AermEgBAhYi06j-B5SMfLFVB8CBHjNCFhd03xi7c5bFQT0r6zmRptAxm-F7E9cXtEiObrChmRzOhjs5z'\r\n      }}\r\n    >\r\n      <Buttons order={order} submit={submit} />\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default PaypalButton;\r\n\r\nfunction Buttons({ order, submit }) {\r\n  const { clearCart } = useCart();\r\n  const navigate = useNavigate();\r\n  const [{ isPending }] = usePayPalScriptReducer();\r\n  const { showLoading, hideLoading } = Loading();\r\n\r\n  useEffect(() => {\r\n    isPending ? showLoading() : hideLoading();\r\n  }, [isPending, showLoading, hideLoading]);\r\n\r\n  const createOrder = (data, actions) => {\r\n    return actions.order.create({\r\n      purchase_units: [{\r\n        amount: {\r\n          currency_code: 'USD',\r\n          value: order.totalPrice.toString(),\r\n        },\r\n      }],\r\n    });\r\n  };\r\n\r\n  const onApprove = async (data, actions) => {\r\n    try {\r\n      const payment = await actions.order.capture();\r\n      const orderId = await submit();\r\n      console.log(orderId)\r\n      await pay(payment.id, orderId);\r\n      clearCart();\r\n      toast.success('Payment Saved Successfully', 'Success');\r\n      navigate('/track/' + orderId);\r\n    } catch (error) {\r\n      toast.error('Payment Saved Failed', 'Error');\r\n    }\r\n  };\r\n\r\n  const onError = (err) => {\r\n    toast.error('Payment Failed', 'Error');\r\n  };\r\n\r\n  return (\r\n    <PayPalButtons\r\n      createOrder={createOrder}\r\n      onApprove={onApprove}\r\n      onError={onError}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}