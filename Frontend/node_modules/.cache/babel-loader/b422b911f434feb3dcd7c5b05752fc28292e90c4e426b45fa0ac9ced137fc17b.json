{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\states\\\\src\\\\Components\\\\Customize\\\\Customize.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useCart } from '../CartProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Customize = () => {\n  _s();\n  const {\n    cart,\n    changeQuantity,\n    addToCart\n  } = useCart();\n  const {\n    totalPrice,\n    totalCount\n  } = cart;\n  const [selectedBase, setSelectedBase] = useState('');\n  const [selectedToppings, setSelectedToppings] = useState([]);\n\n  // Function to handle adding toppings\n  const handleAddTopping = topping => {\n    setSelectedToppings([...selectedToppings, topping]);\n  };\n\n  // Function to handle removing toppings\n  const handleRemoveTopping = topping => {\n    const updatedToppings = selectedToppings.filter(item => item !== topping);\n    setSelectedToppings(updatedToppings);\n  };\n\n  // Function to handle selecting a base\n  const handleSelectBase = base => {\n    setSelectedBase(base);\n  };\n\n  // Function to handle adding customized pizza to the cart\n  const handleAddToCart = () => {\n    // Calculate total price including base and toppings\n    const totalPriceWithCustomization = totalPrice + calculateCustomizationPrice();\n\n    // Create a new food object representing the customized pizza\n    const customizedPizza = {\n      id: Math.random(),\n      // Generate a unique ID (in a real app, this should be handled more robustly)\n      name: `Customized Pizza (${selectedBase})`,\n      // You can customize the name as needed\n      price: totalPriceWithCustomization // Update the price\n    };\n\n    // Add the customized pizza to the cart\n    addToCart(customizedPizza);\n  };\n\n  // Function to calculate the price of the customization (base + (quantity * toppings))\n  const calculateCustomizationPrice = () => {\n    // Calculate the price of the base\n    let basePrice = 0;\n    if (selectedBase === 'Thin') {\n      basePrice = 5; // Example price for Thin base\n    } else if (selectedBase === 'Thick') {\n      basePrice = 7; // Example price for Thick base\n    } else if (selectedBase === 'Stuffed') {\n      basePrice = 9; // Example price for Stuffed base\n    }\n\n    // Calculate the total price of the selected toppings\n    const toppingsPrice = selectedToppings.reduce((total, topping) => {\n      // Example price for toppings\n      const toppingPrice = 2; // Adjust this according to your actual topping prices\n      return total + toppingPrice;\n    }, 0);\n\n    // Return the total price of customization (base + (quantity * toppings))\n    return basePrice + totalCount * toppingsPrice;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Customize Your Pizza\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Base:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSelectBase('Thin'),\n        children: \"Thin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSelectBase('Thick'),\n        children: \"Thick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSelectBase('Stuffed'),\n        children: \"Stuffed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Toppings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), toppingsOptions.map(topping => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddTopping(topping),\n        children: topping.name\n      }, topping.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Price: $\", totalPrice + calculateCustomizationPrice()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddToCart,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Customize, \"zDBN7IYbArcQSFy9n29kRsjCsi0=\", false, function () {\n  return [useCart];\n});\n_c = Customize;\nexport default Customize;\nvar _c;\n$RefreshReg$(_c, \"Customize\");","map":{"version":3,"names":["React","useState","useCart","jsxDEV","_jsxDEV","Customize","_s","cart","changeQuantity","addToCart","totalPrice","totalCount","selectedBase","setSelectedBase","selectedToppings","setSelectedToppings","handleAddTopping","topping","handleRemoveTopping","updatedToppings","filter","item","handleSelectBase","base","handleAddToCart","totalPriceWithCustomization","calculateCustomizationPrice","customizedPizza","id","Math","random","name","price","basePrice","toppingsPrice","reduce","total","toppingPrice","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toppingsOptions","map","_c","$RefreshReg$"],"sources":["C:/Users/karth/Desktop/states/src/Components/Customize/Customize.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useCart } from '../CartProvider';\r\n\r\nconst Customize = () => {\r\n  const { cart, changeQuantity, addToCart } = useCart();\r\n  const { totalPrice, totalCount } = cart;\r\n\r\n  const [selectedBase, setSelectedBase] = useState('');\r\n  const [selectedToppings, setSelectedToppings] = useState([]);\r\n\r\n  // Function to handle adding toppings\r\n  const handleAddTopping = (topping) => {\r\n    setSelectedToppings([...selectedToppings, topping]);\r\n  };\r\n\r\n  // Function to handle removing toppings\r\n  const handleRemoveTopping = (topping) => {\r\n    const updatedToppings = selectedToppings.filter((item) => item !== topping);\r\n    setSelectedToppings(updatedToppings);\r\n  };\r\n\r\n  // Function to handle selecting a base\r\n  const handleSelectBase = (base) => {\r\n    setSelectedBase(base);\r\n  };\r\n\r\n  // Function to handle adding customized pizza to the cart\r\n  const handleAddToCart = () => {\r\n    // Calculate total price including base and toppings\r\n    const totalPriceWithCustomization = totalPrice + calculateCustomizationPrice();\r\n\r\n    // Create a new food object representing the customized pizza\r\n    const customizedPizza = {\r\n      id: Math.random(), // Generate a unique ID (in a real app, this should be handled more robustly)\r\n      name: `Customized Pizza (${selectedBase})`, // You can customize the name as needed\r\n      price: totalPriceWithCustomization, // Update the price\r\n    };\r\n\r\n    // Add the customized pizza to the cart\r\n    addToCart(customizedPizza);\r\n  };\r\n\r\n  // Function to calculate the price of the customization (base + (quantity * toppings))\r\n  const calculateCustomizationPrice = () => {\r\n    // Calculate the price of the base\r\n    let basePrice = 0;\r\n    if (selectedBase === 'Thin') {\r\n      basePrice = 5; // Example price for Thin base\r\n    } else if (selectedBase === 'Thick') {\r\n      basePrice = 7; // Example price for Thick base\r\n    } else if (selectedBase === 'Stuffed') {\r\n      basePrice = 9; // Example price for Stuffed base\r\n    }\r\n\r\n    // Calculate the total price of the selected toppings\r\n    const toppingsPrice = selectedToppings.reduce((total, topping) => {\r\n      // Example price for toppings\r\n      const toppingPrice = 2; // Adjust this according to your actual topping prices\r\n      return total + toppingPrice;\r\n    }, 0);\r\n\r\n    // Return the total price of customization (base + (quantity * toppings))\r\n    return basePrice + totalCount * toppingsPrice;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Customize Your Pizza</h2>\r\n      {/* Base selection */}\r\n      <div>\r\n        <h3>Select Base:</h3>\r\n        <button onClick={() => handleSelectBase('Thin')}>Thin</button>\r\n        <button onClick={() => handleSelectBase('Thick')}>Thick</button>\r\n        <button onClick={() => handleSelectBase('Stuffed')}>Stuffed</button>\r\n      </div>\r\n      {/* Toppings selection */}\r\n      <div>\r\n        <h3>Select Toppings:</h3>\r\n        {/* Display toppings options */}\r\n        {/* Example toppings: {name: 'Mushroom'}, {name: 'Pepperoni'}, etc. */}\r\n        {toppingsOptions.map((topping) => (\r\n          <button key={topping.name} onClick={() => handleAddTopping(topping)}>\r\n            {topping.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {/* Add to cart button */}\r\n      <div>\r\n        <h3>Total Price: ${totalPrice + calculateCustomizationPrice()}</h3>\r\n        <button onClick={handleAddToCart}>Add to Cart</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customize;\r\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}