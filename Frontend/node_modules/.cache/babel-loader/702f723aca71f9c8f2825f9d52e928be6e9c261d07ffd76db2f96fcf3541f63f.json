{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nexport const uploadImage = async event => {\n  let toastId = null;\n  const image = await getImage(event);\n  if (!image) return null;\n  const formData = new FormData();\n  formData.append('image', image, image.name);\n  const response = await axios.post('api/upload', formData, {\n    onUploadProgress: ({\n      progress\n    }) => {\n      if (toastId) toast.update(toastId, {\n        progress\n      });else toastId = toast.success('Uploading...', {\n        progress\n      });\n    }\n  });\n  toast.dismiss(toastId);\n  return response.data.imageUrl;\n};\nconst getImage = async event => {\n  const files = event.target.files;\n  if (!files || files.length <= 0) {\n    toast.warning('Upload file is not selected', 'File Upload');\n    return null;\n  }\n  const file = files[0];\n  if (file.type !== 'image/jpeg') {\n    toast.error('Only JPG type is allowed', 'File Type Error');\n    return null;\n  }\n  return file;\n};","map":{"version":3,"names":["axios","toast","uploadImage","event","toastId","image","getImage","formData","FormData","append","name","response","post","onUploadProgress","progress","update","success","dismiss","data","imageUrl","files","target","length","warning","file","type","error"],"sources":["C:/Users/karth/Desktop/states/Frontend/src/Services/UploadService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nexport const uploadImage = async event => {\r\n    let toastId = null;\r\n\r\n    const image = await getImage(event);\r\n    if(!image) return null;\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', image, image.name);\r\n    const response = await axios.post('api/upload', formData, {\r\n        onUploadProgress: ({ progress }) => {\r\n            if (toastId) toast.update(toastId, { progress });\r\n            else toastId = toast.success('Uploading...', { progress });\r\n        }\r\n    });\r\n    toast.dismiss(toastId);\r\n    return response.data.imageUrl;\r\n};\r\n\r\nconst getImage = async event => {\r\n    const files = event.target.files;\r\n\r\n    if(!files || files.length <=0) {\r\n        toast.warning('Upload file is not selected', 'File Upload');\r\n        return null;\r\n    }\r\n\r\n    const file = files[0];\r\n\r\n    if(file.type !== 'image/jpeg'){\r\n        toast.error('Only JPG type is allowed', 'File Type Error');\r\n        return null;\r\n    }\r\n\r\n    return file;\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAGtC,OAAO,MAAMC,WAAW,GAAG,MAAMC,KAAK,IAAI;EACtC,IAAIC,OAAO,GAAG,IAAI;EAElB,MAAMC,KAAK,GAAG,MAAMC,QAAQ,CAACH,KAAK,CAAC;EACnC,IAAG,CAACE,KAAK,EAAE,OAAO,IAAI;EAEtB,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,EAAEA,KAAK,CAACK,IAAI,CAAC;EAC3C,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,YAAY,EAAEL,QAAQ,EAAE;IACtDM,gBAAgB,EAAEA,CAAC;MAAEC;IAAS,CAAC,KAAK;MAChC,IAAIV,OAAO,EAAEH,KAAK,CAACc,MAAM,CAACX,OAAO,EAAE;QAAEU;MAAS,CAAC,CAAC,CAAC,KAC5CV,OAAO,GAAGH,KAAK,CAACe,OAAO,CAAC,cAAc,EAAE;QAAEF;MAAS,CAAC,CAAC;IAC9D;EACJ,CAAC,CAAC;EACFb,KAAK,CAACgB,OAAO,CAACb,OAAO,CAAC;EACtB,OAAOO,QAAQ,CAACO,IAAI,CAACC,QAAQ;AACjC,CAAC;AAED,MAAMb,QAAQ,GAAG,MAAMH,KAAK,IAAI;EAC5B,MAAMiB,KAAK,GAAGjB,KAAK,CAACkB,MAAM,CAACD,KAAK;EAEhC,IAAG,CAACA,KAAK,IAAIA,KAAK,CAACE,MAAM,IAAG,CAAC,EAAE;IAC3BrB,KAAK,CAACsB,OAAO,CAAC,6BAA6B,EAAE,aAAa,CAAC;IAC3D,OAAO,IAAI;EACf;EAEA,MAAMC,IAAI,GAAGJ,KAAK,CAAC,CAAC,CAAC;EAErB,IAAGI,IAAI,CAACC,IAAI,KAAK,YAAY,EAAC;IAC1BxB,KAAK,CAACyB,KAAK,CAAC,0BAA0B,EAAE,iBAAiB,CAAC;IAC1D,OAAO,IAAI;EACf;EAEA,OAAOF,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}