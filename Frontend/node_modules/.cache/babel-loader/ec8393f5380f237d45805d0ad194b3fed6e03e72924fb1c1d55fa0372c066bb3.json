{"ast":null,"code":"import { crust, sample_foods, sample_tags, toppingsCheese, toppingsNonVeg, toppingsVeg } from \"../Data\";\nexport const getAll = async () => sample_foods;\nexport const search = async searchTerm => sample_foods.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()));\nexport const getAllTags = async () => sample_tags;\nexport const getAllByTags = async tag => {\n  if (tag === 'All') return getAll();\n  return sample_foods.filter(item => item.tags.includes(tag));\n};\nexport const getById = async foodId => sample_foods.find(item => item.id === foodId);\nexport const getCrust = async () => crust;\nexport const getVeg = async () => toppingsVeg;\nexport const getNonVeg = async () => toppingsNonVeg;\nexport const getCheese = async () => toppingsCheese;","map":{"version":3,"names":["crust","sample_foods","sample_tags","toppingsCheese","toppingsNonVeg","toppingsVeg","getAll","search","searchTerm","filter","item","name","toLowerCase","includes","getAllTags","getAllByTags","tag","tags","getById","foodId","find","id","getCrust","getVeg","getNonVeg","getCheese"],"sources":["C:/Users/karth/Desktop/states/src/Services/FoodService.js"],"sourcesContent":["import { crust, sample_foods, sample_tags,  toppingsCheese, toppingsNonVeg, toppingsVeg } from \"../Data\";\r\n\r\nexport const getAll = async () => sample_foods\r\n\r\nexport const search = async searchTerm => \r\n    sample_foods.filter(item => \r\n    item.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n\r\nexport const getAllTags = async () => sample_tags\r\n\r\nexport const getAllByTags = async tag => {\r\n    if (tag === 'All') return getAll()\r\n    return sample_foods.filter(item => item.tags.includes(tag))\r\n}\r\n\r\nexport const getById = async foodId => sample_foods.find(item => item.id === foodId)\r\n\r\nexport const getCrust = async () => crust\r\n\r\nexport const getVeg = async () => toppingsVeg\r\n\r\n\r\nexport const getNonVeg = async () => toppingsNonVeg\r\n\r\n\r\nexport const getCheese = async () => toppingsCheese\r\n\r\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,YAAY,EAAEC,WAAW,EAAGC,cAAc,EAAEC,cAAc,EAAEC,WAAW,QAAQ,SAAS;AAExG,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAYL,YAAY;AAE9C,OAAO,MAAMM,MAAM,GAAG,MAAMC,UAAU,IAClCP,YAAY,CAACQ,MAAM,CAACC,IAAI,IACxBA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,UAAU,CAACI,WAAW,CAAC,CAAC,CAAC,CAAC;AAE/D,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAYZ,WAAW;AAEjD,OAAO,MAAMa,YAAY,GAAG,MAAMC,GAAG,IAAI;EACrC,IAAIA,GAAG,KAAK,KAAK,EAAE,OAAOV,MAAM,CAAC,CAAC;EAClC,OAAOL,YAAY,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACO,IAAI,CAACJ,QAAQ,CAACG,GAAG,CAAC,CAAC;AAC/D,CAAC;AAED,OAAO,MAAME,OAAO,GAAG,MAAMC,MAAM,IAAIlB,YAAY,CAACmB,IAAI,CAACV,IAAI,IAAIA,IAAI,CAACW,EAAE,KAAKF,MAAM,CAAC;AAEpF,OAAO,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAYtB,KAAK;AAEzC,OAAO,MAAMuB,MAAM,GAAG,MAAAA,CAAA,KAAYlB,WAAW;AAG7C,OAAO,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAYpB,cAAc;AAGnD,OAAO,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAYtB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}