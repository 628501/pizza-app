{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\states\\\\Frontend\\\\src\\\\Components\\\\PayPalButton\\\\PaypalButton.js\",\n  _s = $RefreshSig$();\nimport { PayPalButtons, PayPalScriptProvider, usePayPalScriptReducer } from '@paypal/react-paypal-js';\nimport { newOrder } from '../../Services/OrderService';\nimport React, { useEffect, useState } from 'react';\nimport { useCart } from '../../hooks/UseCart';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { Loading } from '../../hooks/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaypalButton = ({\n  order\n}) => {\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: {\n      clientId: 'AermEgBAhYi06j-B5SMfLFVB8CBHjNCFhd03xi7c5bFQT0r6zmRptAxm-F7E9cXtEiObrChmRzOhjs5z'\n    },\n    children: /*#__PURE__*/_jsxDEV(Buttons, {\n      order: order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = PaypalButton;\nexport default PaypalButton;\nfunction Buttons({\n  order\n}) {\n  _s();\n  const {\n    clearCart\n  } = useCart();\n  const [email, setEmail] = useState();\n  const navigate = useNavigate();\n  const [{\n    isPending\n  }] = usePayPalScriptReducer();\n  const {\n    showLoading,\n    hideLoading\n  } = Loading();\n  useEffect(() => {\n    isPending ? showLoading() : hideLoading();\n  }, [isPending, showLoading, hideLoading]);\n  useEffect(() => {\n    const storedContext = localStorage.getItem('user');\n    if (storedContext) {\n      const parsedId = JSON.parse(storedContext);\n      setEmail(parsedId.emailId);\n    }\n  }, []);\n  const createOrder = (data, actions) => {\n    return actions.order.create({\n      purchase_units: [{\n        amount: {\n          currency_code: 'USD',\n          value: order.totalPrice\n        }\n      }]\n    });\n  };\n  const onApprove = async (data, actions) => {\n    try {\n      const payment = await actions.order.capture();\n      console.log();\n      await newOrder({\n        name: order.name,\n        address: order.address,\n        emailId: email,\n        cart_items: order.items,\n        total_price: order.totalPrice,\n        paymentId: payment.id,\n        status: 'PAID',\n        addressLatLng: order.new_address\n      });\n      clearCart();\n      toast.success('Payment Saved Successfully', 'Success');\n      navigate('/');\n    } catch (error) {\n      toast.error('Payment Saved Failed', 'Error');\n    }\n  };\n  const onError = err => {\n    toast.error('Payment Failed', 'Error');\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalButtons, {\n    createOrder: createOrder,\n    onApprove: onApprove,\n    onError: onError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Buttons, \"puQRsjskVbCJQf0FwDgduzIWO54=\", false, function () {\n  return [useCart, useNavigate, usePayPalScriptReducer];\n});\n_c2 = Buttons;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaypalButton\");\n$RefreshReg$(_c2, \"Buttons\");","map":{"version":3,"names":["PayPalButtons","PayPalScriptProvider","usePayPalScriptReducer","newOrder","React","useEffect","useState","useCart","toast","useNavigate","Loading","jsxDEV","_jsxDEV","PaypalButton","order","options","clientId","children","Buttons","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","clearCart","email","setEmail","navigate","isPending","showLoading","hideLoading","storedContext","localStorage","getItem","parsedId","JSON","parse","emailId","createOrder","data","actions","create","purchase_units","amount","currency_code","value","totalPrice","onApprove","payment","capture","console","log","name","address","cart_items","items","total_price","paymentId","id","status","addressLatLng","new_address","success","error","onError","err","_c2","$RefreshReg$"],"sources":["C:/Users/karth/Desktop/states/Frontend/src/Components/PayPalButton/PaypalButton.js"],"sourcesContent":["import { PayPalButtons, PayPalScriptProvider, usePayPalScriptReducer } from '@paypal/react-paypal-js';\r\nimport { newOrder } from '../../Services/OrderService';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useCart } from '../../hooks/UseCart';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Loading } from '../../hooks/Loading';\r\n\r\nconst PaypalButton = ({ order }) => {\r\n\r\n  return (\r\n    <PayPalScriptProvider\r\n      options={{\r\n        clientId: 'AermEgBAhYi06j-B5SMfLFVB8CBHjNCFhd03xi7c5bFQT0r6zmRptAxm-F7E9cXtEiObrChmRzOhjs5z'\r\n      }}\r\n    >\r\n      <Buttons order={order} />\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default PaypalButton;\r\n\r\nfunction Buttons({ order }) {\r\n  const { clearCart } = useCart();\r\n  const [email, setEmail] = useState();\r\n  const navigate = useNavigate();\r\n  const [{ isPending }] = usePayPalScriptReducer();\r\n  const { showLoading, hideLoading } = Loading();\r\n\r\n  useEffect(() => {\r\n    isPending ? showLoading() : hideLoading();\r\n  }, [isPending, showLoading, hideLoading]);\r\n\r\n  useEffect(() => {\r\n    const storedContext = localStorage.getItem('user');\r\n    if(storedContext){\r\n      const parsedId = JSON.parse(storedContext);\r\n      setEmail(parsedId.emailId);\r\n    }\r\n  },[]);\r\n\r\n  const createOrder = (data, actions) => {\r\n    return actions.order.create({\r\n      purchase_units: [{\r\n        amount: {\r\n          currency_code: 'USD',\r\n          value: order.totalPrice,\r\n        },\r\n      }],\r\n    });\r\n  };\r\n\r\n  const onApprove = async (data, actions) => {\r\n    try {\r\n      const payment = await actions.order.capture();\r\n      console.log();\r\n        await newOrder({\r\n        name: order.name,\r\n        address: order.address,\r\n        emailId: email,\r\n        cart_items: order.items,\r\n        total_price: order.totalPrice,\r\n        paymentId: payment.id,\r\n        status: 'PAID',\r\n        addressLatLng: order.new_address,\r\n      });\r\n      clearCart();\r\n      toast.success('Payment Saved Successfully', 'Success');\r\n      navigate('/');\r\n    } catch (error) {\r\n      toast.error('Payment Saved Failed', 'Error');\r\n    }\r\n  };\r\n\r\n  const onError = (err) => {\r\n    toast.error('Payment Failed', 'Error');\r\n  };\r\n\r\n  return (\r\n    <PayPalButtons\r\n      createOrder={createOrder}\r\n      onApprove={onApprove}\r\n      onError={onError}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}