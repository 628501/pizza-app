{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\states\\\\Frontend\\\\src\\\\Components\\\\ForgotPassword\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport classes from \"./ForgotPassword.module.css\";\nimport Input from '../Input/Input';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useForm } from \"react-hook-form\";\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport Title from '../Title/Title';\nimport Button from '../Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submit),\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          label: \"Email\",\n          ...register('email', {\n            required: true,\n            pattern: {\n              value: /^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,63}$/i,\n              message: 'Email Is Not Valid'\n            }\n          }),\n          error: errors.email,\n          autocomplete: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faEnvelope,\n          className: classes.icon1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        text: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"yzjZMr6qSV1p8ZXgYLLySO34eQk=\", false, function () {\n  return [useForm];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","classes","Input","FontAwesomeIcon","useForm","faEnvelope","Title","Button","jsxDEV","_jsxDEV","ForgotPassword","_s","handleSubmit","register","formState","errors","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","submit","noValidate","type","label","required","pattern","value","message","error","email","autocomplete","icon","className","icon1","text","_c","$RefreshReg$"],"sources":["C:/Users/karth/Desktop/states/Frontend/src/Components/ForgotPassword/ForgotPassword.js"],"sourcesContent":["import React from 'react';\r\nimport classes from \"./ForgotPassword.module.css\";\r\nimport Input from '../Input/Input';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport Title from '../Title/Title';\r\nimport Button from '../Button/Button';\r\n\r\nconst ForgotPassword = () => {\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    formState: { errors },\r\n} = useForm();\r\n  return (\r\n    <div>\r\n      <Title title=\"Forgot Password\" />\r\n      <form onSubmit={handleSubmit(submit)} noValidate>\r\n      <div>\r\n        <Input\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          {...register('email', {\r\n              required: true,\r\n              pattern: {\r\n                  value: /^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,63}$/i, \r\n                  message: 'Email Is Not Valid'\r\n              },\r\n          })}\r\n          error={errors.email}\r\n          autocomplete=\"email\"\r\n      />\r\n      <FontAwesomeIcon icon={faEnvelope} className={classes.icon1} />\r\n  </div>\r\n  <Button type='submit' text='Send' />\r\n  </form>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IACJC,YAAY;IACZC,QAAQ;IACRC,SAAS,EAAE;MAAEC;IAAO;EACxB,CAAC,GAAGX,OAAO,CAAC,CAAC;EACX,oBACEK,OAAA;IAAAO,QAAA,gBACEP,OAAA,CAACH,KAAK;MAACW,KAAK,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCZ,OAAA;MAAMa,QAAQ,EAAEV,YAAY,CAACW,MAAM,CAAE;MAACC,UAAU;MAAAR,QAAA,gBAChDP,OAAA;QAAAO,QAAA,gBACEP,OAAA,CAACP,KAAK;UACJuB,IAAI,EAAC,OAAO;UACZC,KAAK,EAAC,OAAO;UAAA,GACTb,QAAQ,CAAC,OAAO,EAAE;YAClBc,QAAQ,EAAE,IAAI;YACdC,OAAO,EAAE;cACLC,KAAK,EAAE,kCAAkC;cACzCC,OAAO,EAAE;YACb;UACJ,CAAC,CAAC;UACFC,KAAK,EAAEhB,MAAM,CAACiB,KAAM;UACpBC,YAAY,EAAC;QAAO;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACFZ,OAAA,CAACN,eAAe;UAAC+B,IAAI,EAAE7B,UAAW;UAAC8B,SAAS,EAAElC,OAAO,CAACmC;QAAM;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACNZ,OAAA,CAACF,MAAM;QAACkB,IAAI,EAAC,QAAQ;QAACY,IAAI,EAAC;MAAM;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAAAV,EAAA,CA9BKD,cAAc;EAAA,QAKhBN,OAAO;AAAA;AAAAkC,EAAA,GALL5B,cAAc;AAgCpB,eAAeA,cAAc;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}