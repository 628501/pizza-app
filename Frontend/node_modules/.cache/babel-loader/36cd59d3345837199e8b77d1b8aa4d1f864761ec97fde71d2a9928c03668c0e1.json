{"ast":null,"code":"import { sample_foods, sample_tags } from \"../Data\";\nexport const getAll = async () => sample_foods;\nexport const search = async searchTerm => sample_foods.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()));\nexport const getAllTags = async () => sample_tags;\nexport const getAllByTags = async tag => {\n  if (tag === 'All') return getAll();\n  return sample_foods.filter(item => item.tags.includes(tag));\n};\nexport const getById = async foodId => {\n  sample_foods.find(item => item.id === NumberfoodId);\n};","map":{"version":3,"names":["sample_foods","sample_tags","getAll","search","searchTerm","filter","item","name","toLowerCase","includes","getAllTags","getAllByTags","tag","tags","getById","foodId","find","id","NumberfoodId"],"sources":["C:/Users/karth/Desktop/states/src/Services/FoodService.js"],"sourcesContent":["import { sample_foods, sample_tags } from \"../Data\";\r\n\r\nexport const getAll = async () => sample_foods\r\n\r\nexport const search = async searchTerm => \r\n    sample_foods.filter(item => \r\n    item.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n\r\nexport const getAllTags = async () => sample_tags\r\n\r\nexport const getAllByTags = async tag => {\r\n    if (tag === 'All') return getAll()\r\n    return sample_foods.filter(item => item.tags.includes(tag))\r\n}\r\n\r\nexport const getById = async foodId => {\r\n     sample_foods.find(item => item.id === NumberfoodId)\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,QAAQ,SAAS;AAEnD,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAYF,YAAY;AAE9C,OAAO,MAAMG,MAAM,GAAG,MAAMC,UAAU,IAClCJ,YAAY,CAACK,MAAM,CAACC,IAAI,IACxBA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,UAAU,CAACI,WAAW,CAAC,CAAC,CAAC,CAAC;AAE/D,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAYT,WAAW;AAEjD,OAAO,MAAMU,YAAY,GAAG,MAAMC,GAAG,IAAI;EACrC,IAAIA,GAAG,KAAK,KAAK,EAAE,OAAOV,MAAM,CAAC,CAAC;EAClC,OAAOF,YAAY,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACO,IAAI,CAACJ,QAAQ,CAACG,GAAG,CAAC,CAAC;AAC/D,CAAC;AAED,OAAO,MAAME,OAAO,GAAG,MAAMC,MAAM,IAAI;EAClCf,YAAY,CAACgB,IAAI,CAACV,IAAI,IAAIA,IAAI,CAACW,EAAE,KAAKC,YAAY,CAAC;AACxD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}