{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\states\\\\src\\\\hooks\\\\UseCart.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(null);\nconst CART_KEY = 'cart';\nconst TOPPINGS_KEY = 'toppings';\nconst EMPTY_CART = {\n  items: [],\n  totalPrice: 0,\n  totalCount: 0\n};\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const initCart = getCartFromLocalStorage();\n  const initToppings = getToppingsFromLocalStorage();\n  const [cartItems, setCartItems] = useState(initCart.items);\n  const [totalPrice, setTotalPrice] = useState(initCart.totalPrice);\n  const [totalCount, setTotalCount] = useState(initCart.totalCount);\n  const [toppings, setToppings] = useState(initToppings);\n  const removeFromCart = foodId => {\n    const filteredCartItems = cartItems.filter(item => item.food.id !== foodId);\n    setCartItems(filteredCartItems);\n    setToppings(prevToppings => {\n      const updatedToppings = {\n        ...prevToppings\n      };\n      delete updatedToppings[foodId];\n      return updatedToppings;\n    });\n  };\n  useEffect(() => {\n    const totalPrice = sum(cartItems.map(item => item.price));\n    const totalCount = sum(cartItems.map(item => item.quantity));\n    setTotalPrice(totalPrice);\n    setTotalCount(totalCount);\n    const cartData = {\n      items: cartItems,\n      totalPrice,\n      totalCount\n    };\n    localStorage.setItem(CART_KEY, JSON.stringify(cartData));\n    localStorage.setItem(TOPPINGS_KEY, JSON.stringify(toppings));\n  }, [cartItems]);\n  useEffect(() => {}, [toppings]);\n  function getCartFromLocalStorage() {\n    const storedCart = localStorage.getItem(CART_KEY);\n    return storedCart ? JSON.parse(storedCart) : EMPTY_CART;\n  }\n  function getToppingsFromLocalStorage() {\n    const storedToppings = localStorage.getItem(TOPPINGS_KEY);\n    return storedToppings ? JSON.parse(storedToppings) : {};\n  }\n  const veg = (food, value) => {\n    console.log(\"Food: \", food);\n    if (food) {\n      setToppings(prevToppings => ({\n        ...prevToppings,\n        [food.id]: prevToppings[food.id] ? prevToppings[food.id] + Number(value) : Number(value)\n      }));\n    }\n  };\n  console.log(toppings);\n  const sum = item => {\n    return item.reduce((prevValue, curValue) => prevValue + curValue, 0);\n  };\n  const changeQuantity = (cartItem, newQuantity) => {\n    const {\n      food\n    } = cartItem;\n    const price = toppings[food.id] ? food.price + toppings[food.id] * newQuantity : food.price * newQuantity;\n    const changedCartItem = {\n      ...cartItem,\n      quantity: newQuantity,\n      price: price\n    };\n    setCartItems(cartItems.map(item => item.food.id === food.id ? changedCartItem : item));\n  };\n  const addToCart = (food, selectedToppings) => {\n    const existingCartItemIndex = cartItems.findIndex(item => item.food.id === food.id);\n    if (existingCartItemIndex !== -1) {\n      const updatedCartItem = {\n        ...cartItems[existingCartItemIndex],\n        toppings: selectedToppings,\n        price: calculatePrice(food, selectedToppings)\n      };\n      const updatedCartItems = [...cartItems];\n      updatedCartItems[existingCartItemIndex] = updatedCartItem;\n      setCartItems(updatedCartItems);\n    } else {\n      setCartItems([...cartItems, {\n        food,\n        quantity: 1,\n        toppings: selectedToppings,\n        price: calculatePrice(food, selectedToppings)\n      }]);\n    }\n  };\n  const calculatePrice = (food, selectedToppings) => {\n    let price = food.price;\n    if (selectedToppings && selectedToppings.length > 0) {\n      for (const topping of selectedToppings) {\n        price += topping;\n      }\n    }\n    return price;\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: {\n        items: cartItems,\n        totalPrice,\n        totalCount\n      },\n      removeFromCart,\n      changeQuantity,\n      addToCart,\n      veg,\n      setToppings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"ulllLN6YYcDYduUfSuYRKZyv7yk=\");\n_c = CartProvider;\nexport default CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","CartContext","CART_KEY","TOPPINGS_KEY","EMPTY_CART","items","totalPrice","totalCount","CartProvider","children","_s","initCart","getCartFromLocalStorage","initToppings","getToppingsFromLocalStorage","cartItems","setCartItems","setTotalPrice","setTotalCount","toppings","setToppings","removeFromCart","foodId","filteredCartItems","filter","item","food","id","prevToppings","updatedToppings","sum","map","price","quantity","cartData","localStorage","setItem","JSON","stringify","storedCart","getItem","parse","storedToppings","veg","value","console","log","Number","reduce","prevValue","curValue","changeQuantity","cartItem","newQuantity","changedCartItem","addToCart","selectedToppings","existingCartItemIndex","findIndex","updatedCartItem","calculatePrice","updatedCartItems","length","topping","Provider","cart","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/karth/Desktop/states/src/hooks/UseCart.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst CartContext = createContext(null);\r\nconst CART_KEY = 'cart';\r\nconst TOPPINGS_KEY = 'toppings'; \r\nconst EMPTY_CART = {\r\n  items: [],\r\n  totalPrice: 0,\r\n  totalCount: 0\r\n};\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const initCart = getCartFromLocalStorage();\r\n  const initToppings = getToppingsFromLocalStorage(); \r\n  const [cartItems, setCartItems] = useState(initCart.items);\r\n  const [totalPrice, setTotalPrice] = useState(initCart.totalPrice);\r\n  const [totalCount, setTotalCount] = useState(initCart.totalCount);\r\n  const [toppings, setToppings] = useState(initToppings); \r\n\r\n  const removeFromCart = (foodId) => {\r\n    const filteredCartItems = cartItems.filter((item) => item.food.id !== foodId);\r\n    setCartItems(filteredCartItems);\r\n    setToppings((prevToppings) => {\r\n      const updatedToppings = { ...prevToppings };\r\n      delete updatedToppings[foodId];\r\n      return updatedToppings;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const totalPrice = sum(cartItems.map((item) => item.price));\r\n    const totalCount = sum(cartItems.map((item) => item.quantity));\r\n    setTotalPrice(totalPrice);\r\n    setTotalCount(totalCount);\r\n\r\n    const cartData = {\r\n      items: cartItems,\r\n      totalPrice,\r\n      totalCount\r\n    };\r\n\r\n    localStorage.setItem(CART_KEY, JSON.stringify(cartData));\r\n    localStorage.setItem(TOPPINGS_KEY, JSON.stringify(toppings)); \r\n  }, [cartItems]); \r\n\r\n  useEffect(() => {\r\n   \r\n  }, [toppings]);\r\n\r\n  function getCartFromLocalStorage() {\r\n    const storedCart = localStorage.getItem(CART_KEY);\r\n    return storedCart ? JSON.parse(storedCart) : EMPTY_CART;\r\n  }\r\n\r\n  function getToppingsFromLocalStorage() {\r\n    const storedToppings = localStorage.getItem(TOPPINGS_KEY);\r\n    return storedToppings ? JSON.parse(storedToppings) : {};\r\n  }\r\n\r\n  const veg = (food, value) => {\r\n    console.log(\"Food: \", food);\r\n    if (food) {\r\n      setToppings((prevToppings) => ({\r\n        ...prevToppings,\r\n        [food.id]: prevToppings[food.id] ? prevToppings[food.id] + Number(value) : Number(value)\r\n      }));\r\n    }\r\n  };\r\n\r\n  console.log(toppings);\r\n\r\n  const sum = (item) => {\r\n    return item.reduce((prevValue, curValue) => prevValue + curValue, 0);\r\n  };\r\n\r\n  const changeQuantity = (cartItem, newQuantity) => {\r\n    const { food } = cartItem;\r\n    const price = toppings[food.id]\r\n      ? food.price + (toppings[food.id] * newQuantity)\r\n      : food.price * newQuantity;\r\n\r\n    const changedCartItem = {\r\n      ...cartItem,\r\n      quantity: newQuantity,\r\n      price: price\r\n    };\r\n\r\n    setCartItems(cartItems.map((item) => (item.food.id === food.id ? changedCartItem : item)));\r\n  };\r\n\r\n  const addToCart = (food, selectedToppings) => {\r\n  const existingCartItemIndex = cartItems.findIndex(item => item.food.id === food.id);\r\n\r\n  if (existingCartItemIndex !== -1) {\r\n    const updatedCartItem = {\r\n      ...cartItems[existingCartItemIndex],\r\n      toppings: selectedToppings,\r\n      price: calculatePrice(food, selectedToppings)\r\n    };\r\n\r\n    const updatedCartItems = [...cartItems];\r\n    updatedCartItems[existingCartItemIndex] = updatedCartItem;\r\n\r\n    setCartItems(updatedCartItems);\r\n  } else {\r\n    setCartItems([...cartItems, { food, quantity: 1, toppings: selectedToppings, price: calculatePrice(food, selectedToppings) }]);\r\n  }\r\n};\r\n\r\n  \r\n  const calculatePrice = (food, selectedToppings) => {\r\n    let price = food.price;\r\n    if (selectedToppings && selectedToppings.length > 0) {\r\n      for (const topping of selectedToppings) {\r\n        price += topping;\r\n      }\r\n    }\r\n    return price;\r\n  };\r\n\r\n  \r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart: { items: cartItems, totalPrice, totalCount },\r\n        removeFromCart,\r\n        changeQuantity,\r\n        addToCart,\r\n        veg,\r\n        setToppings\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}