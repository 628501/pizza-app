{"ast":null,"code":"import axios from 'axios';\nexport const createOrder = async order => {\n  try {\n    const {\n      data\n    } = await axios.post('/api/orders/create', order);\n    const {\n      orderId,\n      ordered\n    } = data;\n    return {\n      orderId,\n      ordered\n    };\n  } catch (error) {\n    console.error('Error creating order:', error);\n    throw error;\n  }\n};\nexport const fetchOrder = async orderId => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/orders/${orderId}`);\n    console.log();\n    return data;\n  } catch (error) {\n    console.error('Error fetching order:', error);\n    throw error;\n  }\n};\nexport const pay = async (paymentId, orderId) => {\n  try {\n    const {\n      data\n    } = await axios.put('/api/orders/pay', {\n      paymentId,\n      orderId\n    });\n    return data;\n  } catch (error) {\n    console.error('Error updating payment:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","createOrder","order","data","post","orderId","ordered","error","console","fetchOrder","get","log","pay","paymentId","put"],"sources":["C:/Users/karth/Desktop/states/Frontend/src/Services/OrderService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const createOrder = async (order) => {\r\n  try {\r\n    const { data } = await axios.post('/api/orders/create', order);\r\n    const { orderId, ordered } = data;\r\n    return { orderId, ordered };\r\n  } catch (error) {\r\n    console.error('Error creating order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchOrder = async (orderId) => {\r\n  try {\r\n    const { data } = await axios.get(`/api/orders/${orderId}`);\r\n    console.log()\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const pay = async (paymentId, orderId) => {\r\n  try {\r\n    const { data } = await axios.put('/api/orders/pay', { paymentId, orderId });\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error updating payment:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;EAC1C,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,oBAAoB,EAAEF,KAAK,CAAC;IAC9D,MAAM;MAAEG,OAAO;MAAEC;IAAQ,CAAC,GAAGH,IAAI;IACjC,OAAO;MAAEE,OAAO;MAAEC;IAAQ,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOJ,OAAO,IAAK;EAC3C,IAAI;IACF,MAAM;MAAEF;IAAK,CAAC,GAAG,MAAMH,KAAK,CAACU,GAAG,CAAC,eAAeL,OAAO,EAAE,CAAC;IAC1DG,OAAO,CAACG,GAAG,CAAC,CAAC;IACb,OAAOR,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,GAAG,GAAG,MAAAA,CAAOC,SAAS,EAAER,OAAO,KAAK;EAC/C,IAAI;IACF,MAAM;MAAEF;IAAK,CAAC,GAAG,MAAMH,KAAK,CAACc,GAAG,CAAC,iBAAiB,EAAE;MAAED,SAAS;MAAER;IAAQ,CAAC,CAAC;IAC3E,OAAOF,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}