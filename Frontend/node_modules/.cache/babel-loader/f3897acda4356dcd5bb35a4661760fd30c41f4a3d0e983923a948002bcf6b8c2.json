{"ast":null,"code":"const addToCart = (food, selectedToppings) => {\n  const existingCartItemIndex = cartItems.findIndex(item => item.food.id === food.id);\n  if (existingCartItemIndex !== -1) {\n    const updatedCartItem = {\n      ...cartItems[existingCartItemIndex],\n      quantity: cartItems[existingCartItemIndex].quantity + 1,\n      price: calculatePrice(food, selectedToppings) * (cartItems[existingCartItemIndex].quantity + 1)\n    };\n    const updatedCartItems = [...cartItems];\n    updatedCartItems[existingCartItemIndex] = updatedCartItem;\n    setCartItems(updatedCartItems);\n  } else {\n    setCartItems([...cartItems, {\n      food,\n      quantity: 1,\n      price: calculatePrice(food, selectedToppings)\n    }]);\n  }\n};\nconst calculatePrice = (food, selectedToppings) => {\n  let price = food.price;\n  for (const topping of selectedToppings) {\n    price += topping.price;\n  }\n  return price;\n};","map":{"version":3,"names":["addToCart","food","selectedToppings","existingCartItemIndex","cartItems","findIndex","item","id","updatedCartItem","quantity","price","calculatePrice","updatedCartItems","setCartItems","topping"],"sources":["C:/Users/karth/Desktop/states/src/hooks/UseCart.js"],"sourcesContent":["const addToCart = (food, selectedToppings) => {\r\n  const existingCartItemIndex = cartItems.findIndex(item => item.food.id === food.id);\r\n\r\n  if (existingCartItemIndex !== -1) {\r\n    const updatedCartItem = {\r\n      ...cartItems[existingCartItemIndex],\r\n      quantity: cartItems[existingCartItemIndex].quantity + 1,\r\n      price: calculatePrice(food, selectedToppings) * (cartItems[existingCartItemIndex].quantity + 1)\r\n    };\r\n\r\n    const updatedCartItems = [...cartItems];\r\n    updatedCartItems[existingCartItemIndex] = updatedCartItem;\r\n\r\n    setCartItems(updatedCartItems);\r\n  } else {\r\n    setCartItems([...cartItems, { food, quantity: 1, price: calculatePrice(food, selectedToppings) }]);\r\n  }\r\n};\r\n\r\nconst calculatePrice = (food, selectedToppings) => {\r\n  let price = food.price;\r\n  for (const topping of selectedToppings) {\r\n    price += topping.price;\r\n  }\r\n  return price;\r\n};"],"mappings":"AAAA,MAAMA,SAAS,GAAGA,CAACC,IAAI,EAAEC,gBAAgB,KAAK;EAC5C,MAAMC,qBAAqB,GAAGC,SAAS,CAACC,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACL,IAAI,CAACM,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;EAEnF,IAAIJ,qBAAqB,KAAK,CAAC,CAAC,EAAE;IAChC,MAAMK,eAAe,GAAG;MACtB,GAAGJ,SAAS,CAACD,qBAAqB,CAAC;MACnCM,QAAQ,EAAEL,SAAS,CAACD,qBAAqB,CAAC,CAACM,QAAQ,GAAG,CAAC;MACvDC,KAAK,EAAEC,cAAc,CAACV,IAAI,EAAEC,gBAAgB,CAAC,IAAIE,SAAS,CAACD,qBAAqB,CAAC,CAACM,QAAQ,GAAG,CAAC;IAChG,CAAC;IAED,MAAMG,gBAAgB,GAAG,CAAC,GAAGR,SAAS,CAAC;IACvCQ,gBAAgB,CAACT,qBAAqB,CAAC,GAAGK,eAAe;IAEzDK,YAAY,CAACD,gBAAgB,CAAC;EAChC,CAAC,MAAM;IACLC,YAAY,CAAC,CAAC,GAAGT,SAAS,EAAE;MAAEH,IAAI;MAAEQ,QAAQ,EAAE,CAAC;MAAEC,KAAK,EAAEC,cAAc,CAACV,IAAI,EAAEC,gBAAgB;IAAE,CAAC,CAAC,CAAC;EACpG;AACF,CAAC;AAED,MAAMS,cAAc,GAAGA,CAACV,IAAI,EAAEC,gBAAgB,KAAK;EACjD,IAAIQ,KAAK,GAAGT,IAAI,CAACS,KAAK;EACtB,KAAK,MAAMI,OAAO,IAAIZ,gBAAgB,EAAE;IACtCQ,KAAK,IAAII,OAAO,CAACJ,KAAK;EACxB;EACA,OAAOA,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}