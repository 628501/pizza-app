{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\states\\\\Frontend\\\\src\\\\Pages\\\\UsersPage\\\\UsersPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classes from \"./UsersPage.module.css\";\nimport { getAll, toggleBlock } from '../../Services/UserService';\nimport Title from '../../Components/Title/Title';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersPage = () => {\n  _s();\n  const [users, setUsers] = useState();\n  const {\n    searchTerm\n  } = useParams();\n  const [id, setId] = useState();\n  useEffect(() => {\n    const storedId = localStorage.getItem('user');\n    if (storedId) {\n      const parsedId = JSON.parse(storedId);\n      setId(parsedId.id);\n    }\n  });\n  useEffect(() => {\n    loadUsers();\n  }, [searchTerm]);\n  const loadUsers = async () => {\n    const users = await getAll(searchTerm);\n    setUsers(users);\n  };\n  const handleToggleBlock = async userId => {\n    const isBlock = await toggleBlock(userId);\n    setUsers(oldUsers => oldUsers.map(user => user.id === userId ? {\n      ...user,\n      isBlock\n    } : user));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.list,\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        title: \"Manage Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.list_item,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), users && users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.list_item,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.isAdmin ? '✅' : '❌'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: '/admin/editUser/' + user.id,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 22\n          }, this), id !== user.id && /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => handleToggleBlock(user.id),\n            children: user.isBlock ? 'Unblock' : 'Block'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersPage, \"5vlpa18jdT5a1Z50RTyqvaNCPJI=\", false, function () {\n  return [useParams];\n});\n_c = UsersPage;\nexport default UsersPage;\nvar _c;\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","classes","getAll","toggleBlock","Title","toast","jsxDEV","_jsxDEV","UsersPage","_s","users","setUsers","searchTerm","id","setId","storedId","localStorage","getItem","parsedId","JSON","parse","loadUsers","handleToggleBlock","userId","isBlock","oldUsers","map","user","className","container","children","list","title","fileName","_jsxFileName","lineNumber","columnNumber","list_item","name","email","address","isAdmin","actions","to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/karth/Desktop/states/Frontend/src/Pages/UsersPage/UsersPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport classes from \"./UsersPage.module.css\"\r\nimport { getAll, toggleBlock } from '../../Services/UserService';\r\nimport Title from '../../Components/Title/Title';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst UsersPage = () => {\r\n    const [users, setUsers] = useState();\r\n    const { searchTerm } = useParams();\r\n    const [id, setId] = useState();\r\n\r\n    useEffect(() => {\r\n      const storedId = localStorage.getItem('user');\r\n      if(storedId){\r\n        const parsedId = JSON.parse(storedId);\r\n        setId(parsedId.id)\r\n      }\r\n    })\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, [searchTerm])\r\n\r\n    const loadUsers = async () => {\r\n        const users = await getAll(searchTerm);\r\n        setUsers(users)\r\n    }\r\n\r\n    const handleToggleBlock = async (userId) => {\r\n        const isBlock = await toggleBlock(userId);\r\n        setUsers((oldUsers) =>\r\n            oldUsers.map((user) =>\r\n              user.id === userId ? { ...user, isBlock } : user\r\n            )\r\n          )\r\n    };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.list}>\r\n        <Title title=\"Manage Users\"/>\r\n        <div className={classes.list_item}>\r\n           <h3>Name</h3>\r\n           <h3>Email</h3>\r\n           <h3>Address</h3>\r\n           <h3>Admin</h3>\r\n           <h3>Actions</h3>\r\n        </div>\r\n        {\r\n            users &&\r\n            users.map(user => \r\n                <div key={user.id} className={classes.list_item}>\r\n                   <span>{user.name}</span>\r\n                   <span>{user.email}</span>\r\n                   <span>{user.address}</span>\r\n                   <span>{user.isAdmin ? '✅' : '❌'}</span>\r\n                   <span className={classes.actions}>\r\n                     <Link to={'/admin/editUser/' + user.id}>\r\n                       Edit\r\n                     </Link>\r\n                     {id !== user.id && (\r\n                       <Link onClick={() => handleToggleBlock(user.id)}>\r\n                          {user.isBlock ? 'Unblock' : 'Block'}\r\n                       </Link>\r\n                     )}\r\n                   </span>\r\n                </div>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersPage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}